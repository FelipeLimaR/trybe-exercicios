// ðŸš€  1 - Altere as variÃ¡veis para respeitarem o escopo em que foram declaradas.
// Modifique a estrutura da funÃ§Ã£o para que ela seja uma arrow function;
// Modifique as variÃ¡veis para que respeitem o escopo onde estÃ£o declaradas;
// Modifique as concatenaÃ§Ãµes para template literals. 
const testingScope = (escopo) => {
    if (escopo === true) {
        let ifScope = 'NÃ£o devo ser utilizada fora do meu escopo (if)';
          ifScope = `${ifScope} Ã³timo, fui utilizada no escopo !`
          console.log(ifScope);
      } else {
          let elseScope = `NÃ£o devo ser utilizada fora meu escopo (else)`;
          console.log(elseScope);
      }
  }
testingScope(true);

// ðŸš€ 2 - Crie uma funÃ§Ã£o que retorne um array em ordem crescente.
// Utilize o console.log e template literals para retornar a frase: 'Os nÃºmeros 2,3,4,7,10,13 se encontram ordenados de forma crescente!'.
const oddsAndEvens = [13, 3, 4, 10, 7, 2];
oddsAndEvens.sort(function(a, b) {
return a - b;
});

console.log(`Os nÃºmeros ${oddsAndEvens} se encontram ordenados de forma crescente!`);